server:
  port: 4000

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus
  endpoint:
    health:
      show-details: always
    metrics:
      access: read_only
    prometheus:
      access: read_only
    loggers:
      access: read_only


spring:
  application:
    name: api-gateway

  cloud:
    gateway:
      routes:
        - id: account-service
          uri: lb://acc-manage-server
          predicates:
            - Path=/api/acc-manage-server/**
          filters:
            - RemoveRequestHeader=Cookie
            - TokenRelay
          metadata:
            requiredScope: api.access

        - id: user-service
          uri: lb://user-manage-server
          predicates:
            - Path=/api/user-manage-server/**
          filters:
            - RemoveRequestHeader=Cookie
            - TokenRelay

      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin
        - AddResponseHeader=Access-Control-Allow-Origin, *  # CORS ??
  r2dbc:
    url: ${url}
    username: ${username}
    password: ${password}
    properties:
      initialSize: 5
      maxSize: 20
      maxIdleTime: PT30M  # 30ë¶„
      validationQuery: SELECT 1
#  datasource:
#    url: ${url}
#    driver-class-name: org.mariadb.jdbc.Driver
#    username: ${username}
#    password: ${password}
#    hikari:
#      maximum-pool-size: 50
#      minimum-idle: 5
#      max-lifetime: 1800000 #30min
#      idle-timeout: 600000 #10min

#  jpa:
#    hibernate:
#      ddl-auto: update  # option type: create, create-drop, update, validate, none
#      naming:
#        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#    properties:
#      hibernate:
#        show_sql: true  # sql ??? ?????.
#        format_sql: true  # sql query formatting
#        use_sql_comments: true  # sql ??? ????? ?????.

logging:
  level:
    root: debug


file:
  dir: ${fileDir}


jwt:
  expiration_time: 86400000 #1?
  secret: ${jwtSecret}