plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.service'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

// Spring Cloud 버전 관리를 위한 설정
ext {
    set('springCloudVersion', "2024.0.1")  // Spring Boot 3.4.x에 맞는 버전
}

dependencies {

    implementation(files("lib/common-core-0.0.1-SNAPSHOT-plain.jar"))

    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // R2DBC 의존성
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.mariadb:r2dbc-mariadb:1.1.3'  // MariaDB R2DBC 드라이버
    implementation 'io.r2dbc:r2dbc-pool'  // 커넥션 풀링


    // Spring Cloud Gateway
    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'

    // Spring Cloud LoadBalancer (선택사항 - 로드밸런싱 필요시)
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    // OAuth2 관련 의존성
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'


    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Spring Cloud 의존성 관리
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}




tasks.named('test') {
    useJUnitPlatform()
}
